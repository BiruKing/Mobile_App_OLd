// Generated by view binder compiler. Do not edit!
package com.ethiop.drivinglicencevalidation.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.ethiop.drivinglicencevalidation.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LoginBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button Login;

  @NonNull
  public final EditText Password;

  @NonNull
  public final TextView Penality;

  @NonNull
  public final EditText UserName;

  @NonNull
  public final CheckBox checkBox;

  @NonNull
  public final ImageView imageView3;

  @NonNull
  public final TextView textView5;

  @NonNull
  public final TextView textView6;

  private LoginBinding(@NonNull ConstraintLayout rootView, @NonNull Button Login,
      @NonNull EditText Password, @NonNull TextView Penality, @NonNull EditText UserName,
      @NonNull CheckBox checkBox, @NonNull ImageView imageView3, @NonNull TextView textView5,
      @NonNull TextView textView6) {
    this.rootView = rootView;
    this.Login = Login;
    this.Password = Password;
    this.Penality = Penality;
    this.UserName = UserName;
    this.checkBox = checkBox;
    this.imageView3 = imageView3;
    this.textView5 = textView5;
    this.textView6 = textView6;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LoginBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LoginBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.login, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LoginBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Login;
      Button Login = rootView.findViewById(id);
      if (Login == null) {
        break missingId;
      }

      id = R.id.Password;
      EditText Password = rootView.findViewById(id);
      if (Password == null) {
        break missingId;
      }

      id = R.id.Penality;
      TextView Penality = rootView.findViewById(id);
      if (Penality == null) {
        break missingId;
      }

      id = R.id.UserName;
      EditText UserName = rootView.findViewById(id);
      if (UserName == null) {
        break missingId;
      }

      id = R.id.checkBox;
      CheckBox checkBox = rootView.findViewById(id);
      if (checkBox == null) {
        break missingId;
      }

      id = R.id.imageView3;
      ImageView imageView3 = rootView.findViewById(id);
      if (imageView3 == null) {
        break missingId;
      }

      id = R.id.textView5;
      TextView textView5 = rootView.findViewById(id);
      if (textView5 == null) {
        break missingId;
      }

      id = R.id.textView6;
      TextView textView6 = rootView.findViewById(id);
      if (textView6 == null) {
        break missingId;
      }

      return new LoginBinding((ConstraintLayout) rootView, Login, Password, Penality, UserName,
          checkBox, imageView3, textView5, textView6);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
